#Analysis

#!/bin/bash

# Create a log file to store time and memory usage for each file
log_file="/home/user/StrainGE/bin/resource_usage_100X_500S.log"

# Clear the log file if it exists
> $log_file

# Initialize total time and memory variables
total_user_time=0
total_system_time=0
total_elapsed_time=0
total_max_memory=0


for i in /home/user/synthetic_data/*_R1.fastq; do
    echo "Processing file: $i" >> $log_file

    # Measure time and memory usage
    time_output=$( { /usr/bin/time -v bash -c "
      straingst kmerize -k 23 -o ${i%_R1.fastq}_100X_500S.hdf5 $i ${i/_R1.fastq/_R2.fastq}
      straingst run -o ${i%_R1.fastq}_100X_500S_E.meliloti.tsv  E.meliloti_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5 
      straingst run -o ${i%_R1.fastq}_100X_500S_A.humicireducens_A.fermentarium.tsv  A.humicireducens_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5
      straingst run -o ${i%_R1.fastq}_100X_500S_A.radiobacter.tsv  A.radiobacter_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5
      straingst run -o ${i%_R1.fastq}_100X_500S_E.amylovora.tsv  E.amylovora_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5
      straingst run -o ${i%_R1.fastq}_100X_500S_E.medicae.tsv  E.medicae_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5
      straingst run -o ${i%_R1.fastq}_100X_500S_A.tumefaciens.tsv  A.tumefaciens_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5
      straingst run -o ${i%_R1.fastq}_100X_500S_P.syringae.tsv  P.syringae_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5
      straingst run -o ${i%_R1.fastq}_100X_500S_X.campestris.tsv  X.campestris_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5
      straingst run -o ${i%_R1.fastq}_100X_500S_X.fastidiosa.tsv  X.fastidiosa_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5
      straingst run -o ${i%_R1.fastq}_100X_500S_X.oryzae.tsv  X.oryzae_pan-genome-db.hdf5 ${i%_R1.fastq}_100X_500S.hdf5 
    "; } 2>&1 )

    echo "$time_output" >> $log_file

   # Extract user, system, and elapsed time and maximum memory usage
    user_time=$(echo "$time_output" | grep "User time (seconds)" | awk '{print $4}')
    system_time=$(echo "$time_output" | grep "System time (seconds)" | awk '{print $4}')
    elapsed_time=$(echo "$time_output" | grep "Elapsed (wall clock) time" | awk '{print $8}')
    max_memory=$(echo "$time_output" | grep "Maximum resident set size (kbytes)" | awk '{print $6}')

    # Convert elapsed time to seconds
    IFS=: read -r min sec <<< "${elapsed_time}"
    elapsed_seconds=$(echo "$min * 60 + $sec" | bc)

    # Add to total time and memory usage
    total_user_time=$(echo "$total_user_time + $user_time" | bc)
    total_system_time=$(echo "$total_system_time + $system_time" | bc)
    total_elapsed_time=$(echo "$total_elapsed_time + $elapsed_seconds" | bc)
    total_max_memory=$(echo "$total_max_memory + $max_memory" | bc)
done

# Print total time and memory usage
echo "Total User Time (seconds): $total_user_time" >> $log_file
echo "Total System Time (seconds): $total_system_time" >> $log_file
echo "Total Elapsed Time (seconds): $total_elapsed_time" >> $log_file
echo "Total Maximum Memory (kbytes): $total_max_memory" >> $log_file
